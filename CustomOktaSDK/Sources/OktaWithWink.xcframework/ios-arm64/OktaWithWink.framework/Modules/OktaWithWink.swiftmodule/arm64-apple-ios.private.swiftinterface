// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios16.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name OktaWithWink
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import ADCountryPicker
import ARKit
import AVFoundation
import AVKit
import Alamofire
import Combine
import CoreImage
import CoreMedia
import DatePicker
import FlagPhoneNumber
import Foundation
import ImageIO
import MobileCoreServices
import NVActivityIndicatorView
import Network
import OktaOidc
@_exported import OktaWithWink
import PhoneNumberKit
import Security
import Swift
import SwiftUI
import UIKit
import Vision
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension CoreGraphics.CGImage {
  @available(iOS 11.0, *)
  public func faceCrop(margin: CoreFoundation.CGFloat = 200, completion: @escaping (OktaWithWink.FaceCropResult) -> Swift.Void)
}
public enum FaceCropResult {
  case success(CoreGraphics.CGImage)
  case notFound
  case failure(any Swift.Error)
}
@_hasMissingDesignatedInitializers public class SDKManager {
  public static var shared: OktaWithWink.SDKManager {
    get
  }
  public func addSDKViewController(to parentViewController: UIKit.UIViewController)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency public class ViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @objc deinit
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
}
